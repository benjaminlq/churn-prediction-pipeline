name: Check model metrics
inputs:
- {name: model, type: Model}
- {name: thresholds_dict_str, type: String}
outputs:
- {name: deploy, type: String}
implementation:
  container:
    image: python:3.9
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.12' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def check_model_metrics(model: Input[Model],
                              thresholds_dict_str: str,
                              ) -> NamedTuple("output",[("deploy",str)]):

          import json

          def threshold_check(val1,val2):
              cond = "False"
              if val1 > val2:
                  cond = "True"
              return cond

          metric = model.metadata["f1_score"]
          thresholds_dict = json.loads(thresholds_dict_str)
          deploy = threshold_check(float(metric), thresholds_dict['f1_score'])

          return (deploy,)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - check_model_metrics
